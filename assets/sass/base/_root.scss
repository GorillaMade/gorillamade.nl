@use "../abstracts" as *;

:root {
    // --color-primary:      #1C1C1E; // Gorilla Black
    // --color-secondary:    #3A3F47; // Steel Gray
    // --color-background:   #F7F7F8; // Ash White
    // --color-highlight:    #FFD042; // Banana Yellow
    // --color-success:       #00A86B; // Jungle Green
    // --color-danger:       #FF3B30; // Blood Orange

    // Font families
    @each $prop, $value in $font-families {
        --ff-#{$prop}: #{$value};
    }

    // Font sizes
    @each $prop, $value in $font-sizes {
        --fs-#{$prop}: #{$value};
    }

    // Font weights
    @each $prop, $value in $font-weights {
        --fw-#{$prop}: #{$value};
    }

    // Spaces
    @each $prop, $value in $spaces {
        --space-#{$prop}: #{$value};
    }

    // Radius
    @each $prop, $value in $radius {
        --radius-#{$prop}: #{$value};
    }

    // Shadows
    @each $prop, $value in $shadows {
        --shadow-#{$prop}: #{$value};
    }

    // Layers
    @each $prop, $value in $layers {
        --layer-#{$prop}: #{$value};
    }

    // Blurs
    @each $prop, $value in $blurs {
        --blur-#{$prop}: #{$value};
    }

    // âœ¨ Default color theme (via $active-theme)
    @each $color, $shade-map in $active-theme {
        @each $shade, $value in $shade-map {
            --#{$color}-#{$shade}: #{$value};
        }
    }
}

// Color(s) via data-theme attribute
html[data-theme="dark"] {
    @each $color, $shade-map in $dark {
        @each $shade, $value in $shade-map {
            --#{$color}-#{$shade}: #{$value};
        }
    }
}

// ðŸŒ“ Fallback: match system preference if no localStorage is used
@if ($enable-media-prefers-dark-mode) {
    @media (prefers-color-scheme: dark) {
        :root {
            @each $color, $shade-map in $dark {
                @each $shade, $value in $shade-map {
                    --#{$color}-#{$shade}: #{$value};
                }
            }
        }
    }
}